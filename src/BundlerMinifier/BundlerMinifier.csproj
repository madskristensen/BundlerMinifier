<Project Sdk="Microsoft.NET.Sdk">

  <Import Project="..\common.props" />

  <PropertyGroup>
    <TargetFrameworks>net46;netstandard1.3;netcoreapp2.0</TargetFrameworks>
    <Title>Bundler &amp; Minifier</Title>
    <PackageId>BuildBundlerMinifier</PackageId>

    <BuildOutputTargetFolder>tools</BuildOutputTargetFolder>
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
    <NoPackageAnalysis>true</NoPackageAnalysis>
    <!-- forces SDK to copy dependencies into build output to make packing easier -->
    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.Build.Framework" Version="15.1.0-*" PrivateAssets="All" />
    <PackageReference Include="Microsoft.Build.Utilities.Core" Version="15.1.0-*" PrivateAssets="All" />
    <PackageReference Include="Newtonsoft.Json" Version="9.0.1" PrivateAssets="All" />
    <PackageReference Include="NUglify" Version="1.5.9" PrivateAssets="All" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)' == 'netstandard1.3'">
    <PackageReference Include="System.IO.FileSystem.Watcher" Version="4.0.0" PrivateAssets="All" />
  </ItemGroup>

  <ItemGroup>
    <Compile Include="..\BundlerMinifier.Core\**\*.cs" Exclude="..\BundlerMinifier.Core\obj\**;..\BundlerMinifier.Core\bin\**">
      <Link>%(RecursiveDir)%(Filename)%(Extension)</Link>
    </Compile>
    <Content Include="build\*.targets" PackagePath="build\" />
  </ItemGroup>

  <Target Name="PackTaskDependencies" BeforeTargets="GenerateNuspec">
    <!--
    The include needs to happen after output has been copied to build output folder
    but before NuGet generates a nuspec. See https://github.com/NuGet/Home/issues/4704.
    -->
    <ItemGroup>
      <_PackageFiles Include="bin\$(Configuration)\*\Newtonsoft.Json.dll;bin\$(Configuration)\*\NUglify.dll">
        <PackagePath>tools\%(RecursiveDir)</PackagePath>
        <Visible>false</Visible>
        <BuildAction>Content</BuildAction>
      </_PackageFiles>
    </ItemGroup>
  </Target>

</Project>
